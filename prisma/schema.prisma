// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String       @id
  displayName       String       @map("display_name")
  userPrincipalName String       @map("user_principal_name")
  mail              String?
  jobTitle          String?      @map("job_title")
  assignments       Assignment[]

  @@map("users")
}

model Group {
  id          String    @id
  displayName String    @map("display_name")
  description String?
  mail        String?
  planners    Planner[]

  @@map("groups")
}

model Planner {
  id         String   @id
  groupId    String   @map("group_id")
  title      String
  owner      String
  totalHours Float?   @map("total_hours")
  tasks      Task[]
  buckets    Bucket[]

  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@map("planners")
}

model Task {
  id                String       @id
  plannerId         String       @map("planner_id")
  bucketId          String?      @map("bucket_id")
  title             String
  percentComplete   Int          @map("percent_complete")
  priority          Int
  startDateTime     DateTime?    @map("start_date_time")
  dueDateTime       DateTime?    @map("due_date_time")
  completedDateTime DateTime?    @map("completed_date_time")
  hours             Float?
  assignments       Assignment[]

  planner Planner @relation(fields: [plannerId], references: [id], onDelete: Cascade)
  bucket  Bucket? @relation(fields: [bucketId], references: [id], onDelete: Cascade)

  @@map("tasks")
}

model Assignment {
  id     String @id
  taskId String @map("task_id")
  userId String @map("user_id")

  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("assignments")
}

model Bucket {
  id        String @id
  plannerId String @map("plan_id")
  name      String
  tasks     Task[]

  planner Planner @relation(fields: [plannerId], references: [id], onDelete: Cascade)

  @@map("buckets")
}

model Template {
  id    String         @id
  title String
  tasks TaskTemplate[]

  @@map("templates")
}

model TaskTemplate {
  id         String @id
  templateId String
  title      String
  priority   Int
  hours      Int

  template Template @relation(fields: [templateId], references: [id])

  @@map("task_templates")
}
